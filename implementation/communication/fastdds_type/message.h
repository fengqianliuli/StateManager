// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file message.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_SM_MESSAGE_H_
#define _FAST_DDS_GENERATED_SM_MESSAGE_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>



#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(MESSAGE_SOURCE)
#define MESSAGE_DllAPI __declspec( dllexport )
#else
#define MESSAGE_DllAPI __declspec( dllimport )
#endif // MESSAGE_SOURCE
#else
#define MESSAGE_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define MESSAGE_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace sm {

/*!
 * @brief This class represents the enumeration MsgType defined by the user in the IDL file.
 * @ingroup message
 */
enum MsgType : uint32_t
{
    kS2S,
    kS2SAck,
    kC2S,
    kS2CAck,
    kS2CPub
};


/*!
 * @brief This class represents the structure Message defined by the user in the IDL file.
 * @ingroup message
 */
class Message
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport Message();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~Message();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object sm::Message that will be copied.
     */
    eProsima_user_DllExport Message(
            const Message& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object sm::Message that will be copied.
     */
    eProsima_user_DllExport Message(
            Message&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object sm::Message that will be copied.
     */
    eProsima_user_DllExport Message& operator =(
            const Message& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object sm::Message that will be copied.
     */
    eProsima_user_DllExport Message& operator =(
            Message&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x sm::Message object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const Message& x) const;

    /*!
     * @brief Comparison operator.
     * @param x sm::Message object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const Message& x) const;

    /*!
     * @brief This function sets a value in member id
     * @param _id New value for member id
     */
    eProsima_user_DllExport void id(
            uint32_t _id);

    /*!
     * @brief This function returns the value of member id
     * @return Value of member id
     */
    eProsima_user_DllExport uint32_t id() const;

    /*!
     * @brief This function returns a reference to member id
     * @return Reference to member id
     */
    eProsima_user_DllExport uint32_t& id();


    /*!
     * @brief This function sets a value in member msg_type
     * @param _msg_type New value for member msg_type
     */
    eProsima_user_DllExport void msg_type(
            sm::MsgType _msg_type);

    /*!
     * @brief This function returns the value of member msg_type
     * @return Value of member msg_type
     */
    eProsima_user_DllExport sm::MsgType msg_type() const;

    /*!
     * @brief This function returns a reference to member msg_type
     * @return Reference to member msg_type
     */
    eProsima_user_DllExport sm::MsgType& msg_type();


    /*!
     * @brief This function copies the value in member content
     * @param _content New value to be copied in member content
     */
    eProsima_user_DllExport void content(
            const std::string& _content);

    /*!
     * @brief This function moves the value in member content
     * @param _content New value to be moved in member content
     */
    eProsima_user_DllExport void content(
            std::string&& _content);

    /*!
     * @brief This function returns a constant reference to member content
     * @return Constant reference to member content
     */
    eProsima_user_DllExport const std::string& content() const;

    /*!
     * @brief This function returns a reference to member content
     * @return Reference to member content
     */
    eProsima_user_DllExport std::string& content();

private:

    uint32_t m_id{0};
    sm::MsgType m_msg_type{sm::kS2S};
    std::string m_content;

};

} // namespace sm

#endif // _FAST_DDS_GENERATED_SM_MESSAGE_H_



